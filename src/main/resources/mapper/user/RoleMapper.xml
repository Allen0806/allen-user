<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.allen.user.dao.RoleDAO">
	<insert id="save" parameterType="AuRoleDO" useGeneratedKeys="true" keyProperty="id" >
		insert into au_role(role_name, role_note, create_time)
			values(#{roleName}, #{roleNote}, #{createTime})
	</insert>
	<!-- 根据主键ID更新，trim使用示例 -->
	<update id="update" parameterType="com.allen.user.model.AuRoleDO">
		update au_role
		<trim prefix="set" suffixOverrides=",">
			<if test="roleName != null" >role_name=#{roleName},</if>
			<if test="roleNote != null">role_note=#{roleNote}</if>
		</trim>
		where id = #{id}
	</update>
	<!-- 根据主键ID删除 -->
	<delete id="delete" parameterType="long">
		delete from au_role where id = #{id}
	</delete>
	<insert id="saveUserRole" useGeneratedKeys="true" keyProperty="id">
		insert into au_user_role(user_id, role_id, create_time) values
		<foreach collection="list" item="item" separator=",">
			(#{item.userId}, #{item.roleId}, #{item.createTime})
		</foreach>
	</insert>
	<delete id="deleteUserRole">
		delete from au_user_role
		<if test="userId != null or roleId != null">
			<where>
				<if test="userId != null">
					user_id = #{userId}
				</if>
				<if test="roleId != null">
					and role_id = #{roleId}
				</if>
			</where>
		</if>
	</delete>
	<!-- 通用查询语句块 -->
	<sql id="roleColumns">
		id, role_name, role_note, create_time
	</sql>
	<!-- 单角色结果集 -->
	<resultMap id="roleResultMap" type="AuRoleDO">
		<id property="id" column="id" />
		<result property="roleName" column="role_name" />
		<result property="roleNote" column="role_note"/>
		<result property="createTime" column="create_time"/>
	</resultMap>
	<!-- 根据主键获取角色 -->
	<select id="get" parameterType="long" resultMap="roleResultMap">
		select
		<include refid="roleColumns" />
		from au_role
		where id = #{id}
	</select>
	<!-- 根据角色名称获取角色，测试驼峰配置特性 -->
	<select id="getByRoleName" parameterType="string" resultType="AuRoleDO">
		select
		<include refid="roleColumns" />
		from au_role
		where role_name = #{roleName}
	</select>
	<select id="listRole" resultMap="roleResultMap">
		select 
			b.id id,
			b.role_name role_name,
			b.role_note role_note,
			b.create_time, create_time
		from au_user_role a left join au_role b on b.id = a.role_id
		where a.user_id = #{userId}
	</select>
	<resultMap id="userRoleAssoResultMap" type="UserRoleAssoDO">
		<id property="id" column="id" />
		<result property="userId" column="user_id" />
		<result property="roleId" column="role_id"/>
		<result property="createTime" column="create_time"/>
		<association property="role" column="role_id" javaType="AuRoleDO" resultMap="roleResultMap" columnPrefix="r_"/>
	</resultMap>
	<select id="getUserRole" resultMap="userRoleAssoResultMap">
		select 
			a.id id,
			a.user_id user_id,
			a.role_id role_id,
			a.create_time create_time,
			b.id r_id,
			b.role_name r_role_name,
			b.role_note r_role_note,
			b.create_time r_create_time
		from au_user_role a left join au_role b on b.id = a.role_id
		where a.role_id = #{roleId}
	</select>
	<cache-ref namespace="com.allen.user.dao.UserDAO"/>
</mapper>